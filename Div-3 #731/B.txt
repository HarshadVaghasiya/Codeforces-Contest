#include <bits/stdc++.h>
using namespace std;
 

// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
// using namespace __gnu_pbds;
// #define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>


#define pb push_back
#define pob pop_back
#define S second
#define F first
#define FAST ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define vll vector<long long int>
#define pll pair<long long int,long long int>
// unordered_map<int,int>mp; mp.reserve(1024); mp.max_load_factor(0.25);
#define mod 1000000007
#define mod2 998244353
#define ll long long int
#define ld long double
#define pi 3.141592653589793238
#define Endl endl
#define endl "\n"
const ll N = 2e5 + 15;
const ll inf = 1e18;

void solve()
{
        string s;
        cin >> s;
        ll n = s.size();
        set<int> all;
        for(ll i = 0 ; i < n ; i++ )
        {
                char c = 'a' + i;
                bool found = 0;
                for(int j = 0 ; j < n ; j++ )
                {
                        if(s[j] == c)
                        {
                                found = 1;
                                if(all.empty())
                                        all.insert(j);
                                else
                                {
                                        ll left = *all.begin();
                                        ll right = *all.rbegin();
                                        if(abs(left-j) > 1 and abs(right-j) > 1)
                                        {
                                                cout << "NO" << endl;
                                                return;
                                        }
                                        all.insert(j);
                                }
                        }
                }
                if(found == 0)
                {
                        cout << "NO" << endl;
                        return;
                }
        }
        cout << "YES" << endl;
}        

void debug(ll tt) {}
 
signed main()
{
        FAST;
        int t = 1;
        cin >> t;
        while(t--)
        {
                solve();
        }
}
// freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);