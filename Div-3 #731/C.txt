#include <bits/stdc++.h>
using namespace std;
 

// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
// using namespace __gnu_pbds;
// #define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>


#define pb push_back
#define pob pop_back
#define S second
#define F first
#define FAST ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define vll vector<long long int>
#define pll pair<long long int,long long int>
// unordered_map<int,int>mp; mp.reserve(1024); mp.max_load_factor(0.25);
#define mod 1000000007
#define mod2 998244353
#define ll long long int
#define ld long double
#define pi 3.141592653589793238
#define Endl endl
#define endl "\n"
const ll N = 2e5 + 15;
const ll inf = 1e18;

void solve()
{
        ll k , n , m;
        cin >> k >> n >> m;
        vll ans;
        vll a(n) , b(m);
        for(auto &x:a)
                cin >> x;
        for(auto &x:b)
                cin >> x;
        ll i = 0 , j = 0;
        while(i < n and j < m)
        {
                if(a[i] == 0)
                        ans.pb(0) , i++ , k++;
                else if(b[j] == 0)
                        ans.pb(0) , j++ , k++;
                else if(a[i] <= b[j])
                {
                        if(a[i] > k)
                        {
                                cout << -1 << endl;
                                return;
                        }
                        else
                                ans.pb(a[i]) , i++;
                }
                else
                {
                        if(b[j] > k)
                        {
                                cout << -1 << endl;
                                return;
                        }
                        else
                                ans.pb(b[j]) , j++;
                }
        }
        while(i < n)
        {
                if(a[i] == 0)
                        ans.pb(0) , i++ , k++;
                else if(a[i] > k)
                {
                        cout << -1 << endl;
                        return;
                }
                else
                        ans.pb(a[i]) , i++;
        }
        while(j < m)
        {
                if(b[j] == 0)
                        ans.pb(0) , j++ , k++;
                else if(b[j] > k)
                {
                        cout << -1 << endl;
                        return;
                }
                else
                        ans.pb(b[j]) , j++;
        }
        for(auto x:ans)
                cout << x << " ";
        cout << endl;
}        

void debug(ll tt) {}
 
signed main()
{
        FAST;
        int t = 1;
        cin >> t;
        while(t--)
        {
                solve();
        }
}
// freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);